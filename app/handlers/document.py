from io import BytesIO

from aiogram import Router, F, Bot
from aiogram.types import ContentType, Message

from app.services.yandex_disk import upload_photo

router = Router(name="document")

@router.message(F.content_type == ContentType.DOCUMENT)
async def handle_document(message: Message, bot: Bot):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏, –∑–∞–≥—Ä—É–∂–∞–µ—Ç –∏—Ö –Ω–∞ –Ø–Ω–¥–µ–∫—Å –î–∏—Å–∫.

    :param message: –û–±—ä–µ–∫—Ç —Å–æ–æ–±—â–µ–Ω–∏—è, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π –¥–æ–∫—É–º–µ–Ω—Ç.
    :type message: Message
    :param bot: –û–±—ä–µ–∫—Ç –±–æ—Ç–∞ –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Telegram API.
    :type bot: Bot
    """

    document = message.document
    file_info = await bot.get_file(document.file_id)

    with BytesIO() as byte_stream:
        await bot.download_file(file_info.file_path, destination=byte_stream)
        byte_stream.seek(0)
        result = upload_photo(byte_stream, document.file_id)

        if result:
            await message.answer("–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω üôå")
        else:
            await message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ")
